// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-iterator-like@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-uint32array@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";var c={copy:!0},f=e,b=t,v=n,y=s,x=i.isPrimitive,w=r,L=o,T=d.isPrimitive,E=m,N=a,P=l,O=p,G=u,R=h,V=j,k=g.factory,q=c;var z=function e(t,n,s){var i,r,o,d;if(!y(t))throw new TypeError(V("invalid argument. First argument must be an iterator. Value: `%s`.",t));if(!x(n))throw new TypeError(V("invalid argument. Second argument must be a positive number. Value: `%s`.",n));if(r=P(q),arguments.length>2){if(!w(s))throw new TypeError(V("invalid argument. Third argument must be an object. Value: `%s`.",s));if(N(s,"copy")&&(r.copy=s.copy,!T(s.copy)))throw new TypeError(V("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",s.copy));if(N(s,"prng")){if(!L(s.prng))throw new TypeError(V("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",s.prng));i=s.prng}else if(N(s,"state")){if(r.state=s.state,!E(s.state))throw new TypeError(V("invalid option. `%s` option must be a Uint32Array. Option: `%s`.","state",s.state))}else if(N(s,"seed")&&(r.seed=s.seed,void 0===s.seed))throw new TypeError(V("invalid option. `%s` option must be either a positive integer less than or equal to the maximum unsigned 32-bit integer or an array-like object containing integer values less than or equal to the maximum unsigned 32-bit integer. Option: `%s`.","seed",s.seed))}return void 0===i&&(i=k(r)),f(o={},"next",j),f(o,"return",g),R&&L(t[R])&&f(o,R,c),s&&s.prng?(f(o,"seed",null),f(o,"seedLength",null),v(o,"state",G(null),O),f(o,"stateLength",null),f(o,"byteLength",null),f(o,"PRNG",null)):(b(o,"seed",m),b(o,"seedLength",a),v(o,"state",u,h),b(o,"stateLength",l),b(o,"byteLength",p),f(o,"PRNG",i.PRNG)),o;function m(){return i.seed}function a(){return i.seedLength}function l(){return i.stateLength}function p(){return i.byteLength}function u(){return i.state}function h(e){i.state=e}function j(){var e;return d?{done:!0}:(e=t.next()).done?(d=!0,e):{value:e="number"==typeof e.value?e.value+n*i():NaN,done:!1}}function g(e){return d=!0,arguments.length?{value:e,done:!0}:{done:!0}}function c(){return e(t[R](),n,r)}},A=z;export{A as default};
//# sourceMappingURL=index.mjs.map
